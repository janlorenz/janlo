---
title: "Help on LLSC in \"Unifying Framework of Cascading\""
date: 2010-11-05
categories: 
  - "english"
---

As being the creator of the figures in [Systemic Risk in a Unifying Framework for Cascading Processes on Networks](http://dx.doi.org/10.1140/epjb/e2009-00347-4) ([arXiv:0907.5325](http://arxiv.org/abs/0907.5325)) I'd like to give some help on the "Local Load Sharing model with load Conservation" (LLSC) by example. <!--more Â» Continue reading ...-->

The model was taken from [Universality Class of the Fiber Bundle Model on Complex Networks](http://dx.doi.org/10.1103/PhysRevLett.94.025501) (\[6\] in the paper). There you can find a different definition of the model dynamics. It is valid only for undirected networks (as our examples) but is equivalent to ours' in the paper. Our definition also holds for directed networks. Here are the definitions and two examples. (Thereby we also clarify slight typo and formatting errors which we unfortunatelly overlooked in correcting the proof.)

Let \[math\] \\phi^0\_i=1\[/math\] be the initial load, uniformly one for all nodes, \[math\] s(t)\[/math\] is the vector of failing states and \[math\]A\[/math\] stands for the network. The dynamics to compute the loads of alive nodes from the current vector of failing states is Eq. (12)

\[math\] \\phi\_i(t) = \\phi^0\_i +\\sum\_{j\\in \\text{reach}^{0\\to 1}\_\\text{in}(i,s(t),A)}\\frac{\\phi\_j^0}{\\sharp\\, \\text{reach}^{1\\to 0}\_\\text{out}(j,s(t),A)} \[/math\]

Failing states are updated according to the general model, in Eq. (2)

\[math\] s\_i(t+1) = \\Theta(z\_i(t))\[/math\] with \[math\]z\_{i}(t)=\\phi\_{i}(t)-\\theta\_{i} \[/math\]

with \[math\] \\Theta \[/math\] being the Heaviside function being zero when input is below zero and one when input is above zero. Thus, a failure is assigned when load (\[math\] \\phi \[/math\]) is above failing threshold (\[math\] \\theta \[/math\]).

Let's go to the details and look at [Fig. 3](http://janlo.de/wp/wp-content/uploads/2010/11/contagion_fig3_web.pdf) and [Fig. 15](http://janlo.de/wp/wp-content/uploads/2010/11/contagion_fig15.pdf). We focus on the left branch (labeled "links remain" for LLSC model) and the final step from the second last configuration to the last configuration. In both configurations in the second last step it holds s(t)=\[0 0 1 1 1 0 0 0 0\] because nodes **C**,**D**, and **E** failed. To compute loads by Eq. (12) we need to quantify the set \[math\]\\text{reach}^{0\\to 1}\_\\text{in}(i,s(t),A)\[/math\] for all nodes alive (**A**,**B**,**F**,**G**,**H**,**I**). Subsequently, we have to quantify \[math\]\\text{reach}^{1\\to 0}\_\\text{out}(j,s(t),A)\[/math\] for all the failed nodes (**C**,**D**,**E**). It is not that difficult for this example because both sets are always equal. (See the paper for the formal definitions of both "reach"-sets). As example for a node alive look at

\[math\]\\text{reach}^{0\\to 1}\_\\text{in}({\\bf\\sf A},s(t),A) = \\{{\\bf\\sf C,D,E}\\}.\[/math\]

This holds because **A** can be reached from all the failed nodes through a path of failed nodes. Thus, it will receive parts of the initial loads of all failed nodes. What part will become clear once we quantify as example for a failed node

\[math\]\\text{reach}^{1\\to 0}\_\\text{out}({\\bf\\sf C},s(t),A) = \\{{\\bf\\sf A,B,F,G,H,I}\\}.\[/math\]

Each failed node transfers its load to 6 nodes alive, because each failed node can reach all nodes alive along a path of failed nodes. Consequently, each of the nodes alive receives 3 times 1/6 as additional load to its own initial load, summing up to 1.5 for each node alive. When the load of failed nodes is set to zero (which is naturally but unfortunately never formally stated) the total load remains constant at the magnitude of 9.

The transfer of load along a path of failed nodes is what is meant with the description "links remain". Thus, the load of all failed nodes can be rebalanced when clusters of failed nodes merge, which does not happen in the current example. But the examples in [Fig. 3](http://janlo.de/wp/wp-content/uploads/2010/11/contagion_fig3_web.pdf) shows that the load of some nodes alive can decrease (e.g. node **A**) by new failures when the newly failed nodes bridges the cluster of failed nodes to many other nodes alive such that load can be carried by more nodes.

As a consequence, one can say that the process of local load sharing (as emphasized in \[6\], and consequently also by us) is not that local as it concerns the failed nodes. Vie a cluster of failed nodes it is possible to rebalance load among otherwise disconnected components of nodes alive.

The two examples [Fig. 3](http://janlo.de/wp/wp-content/uploads/2010/11/contagion_fig3_web.pdf) and [Fig. 15](http://janlo.de/wp/wp-content/uploads/2010/11/contagion_fig15.pdf) show that a different initially failing node (**D** instead of **C**) does not change the result of the cascade when links remain, as discussed. But it changes dramatically when links fail: First, the cascade proceeds in both cases because rebalancing is not possible. Second, it changes direction when the initially failing node is changed to the neighbor.
